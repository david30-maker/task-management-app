---
openapi: 3.0.1
info:
  title: Task_Managment_API
  version: v1
paths:
  "/signup":
    post:
      summary: Signup
      tags:
      - Signup
      parameters: []
      responses:
        '201':
          description: signup successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string  
              required:
              - email
              - password
          application/xml:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/login":
    post:
      summary: Login
      tags:
      - Login
      parameters: []
      responses:
        '200':
          description: login successful
        '401':
          description: login failed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
          application/xml:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/logout":
    post:
      summary: Logout
      tags:
      - Logout
      parameters: []
      responses:
        '200':
          description: logout successful
        '401':
          description: logout failed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
          application/xml:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
 
    get:
      summary: Retrieves all tasks
      tags:
      - Tasks
      responses:
        '200':
          description: tasks found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    status:
                      type: string
                  required:
                  - id
                  - name
                  - status
            application/xml:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    status:
                      type: string
                  required:
                  - id
                  - name
                  - status
  "/api/v1/tasks/{id}":

   "/api/v1/tasks":
    post:
      summary: Creates a task
      tags:
      - Tasks
      parameters: []
      responses:
        '201':
          description: task created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
              completed:
                type: boolean    
              required:
              - title
              - description
          application/xml:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
              required:
              - title
              - description
              - status

               get:
      summary: Retrieves a task
      tags:
      - Tasks
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: task found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  status:
                    type: string
                required:
                - id
                - name
                - status
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  status:
                    type: string
                required:
                - id
                - name
                - status
        '404':
          description: task not found

    patch:
      summary: Updates a task
      tags:
      - Tasks
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: task updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
              required:
              - title
              - description
          application/xml:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
              required:
              - title
              - description
              - status

    delete:
      summary: Deletes a task
      tags:
      - Tasks
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: task deleted
        '404':
          description: task not found
servers:
- url: https://localhost:3000/api/v1/tasks
  variables:
    defaultHost:
      default: www.example.com
